#!/bin/bash
set -e 
platform=$1
for_app=$2
feature=$3
build_directory_a=$4
build_directory_b=$5
build_directory_c=$6
cudid=0

original_directory=($(pwd))

run_instructions="./run [ platform ] [ app_name ] [ all_or_feature_by_name ] [ optional_sdk_or_app_directory ] [ optional_app_directory_if_using_sdk ] [ android_relative_path_to_sdk_from_app ] "

clean_all(){
  if [ -f build.xml ]; then
    rm build.xml
  fi
  if [ -f project.properties ]; then
    rm project.properties
  fi
}

if [[ -z "$platform" ]]; then
  echo "You did not specify a platform."
  echo $run_instructions
  exit
fi

if [[ -z "$for_app" ]]; then
  echo "You did not specify an app name."
  echo $run_instructions
  exit
fi

if [[ -z "$feature" ]]; then
  echo "You did not specify a feature name or all"
  echo $run_instructions
  exit
else
  feature=($(echo $feature | awk '{print tolower($0)}'))
  if [[ ! -f "features/$feature.feature" && $feature != "all" ]]; then
    echo "The feature you specified does not have a .feature file associated with it."
    echo "Feature files should be created in the features directory."
    echo "Scenarios for a feature called 'crop' should be written in features/crop.feature"
    exit
  fi
fi


echo "Making sure we have a connection to a device...We can wait forever here..."
while [ $cudid -eq 0 ]
do
  if [ "$platform" == "ios" ]; then
    udid=($(system_profiler SPUSBDataType | grep -A 10 iP | grep Serial | cut -d: -f2))
    udid=${udid[device_order]}
  else
    udid=($(adb devices | tail -n 2))
    udid=${udid[0]}
    if [ "$udid" == "List" ]; then
      udid=""
    fi
  fi
  cudid=${#udid}
done

udid=${udid// /}
echo "Starting automation for $for_app on $udid"

if [[ -z $build_directory_b ]]; then
  echo "skipping directory B build"
else
  cd $build_directory_b
  if [ "$platform" == "ios" ]; then
    xcrun xcodebuild -target R1PhotoEffectsSDK -sdk iphoneos "ARCHS=armv7s armv7" BUILD_NUMBER=${BUILD_NUMBER} IPHONEOS_DEPLOYMENT_TARGET=5.0 clean build
  else
    if [[ -z $build_directory_c ]]; then
      echo "You did not specify the relative SDK path"
      exit
    fi
    clean_all
    android update project --target "android-17" --path .
    ant clean release
  fi
  cd $original_directory
fi

if [[ -z $build_directory_a ]]; then 
  echo "skipping directory A build"
else
  cd $build_directory_a
  if [ "$platform" == "ios" ]; then
    xcrun xcodebuild -target Demo -sdk iphoneos "ARCHS=armv7s armv7" clean build CODE_SIGN_IDENTITY="iPhone Developer: Brad Smith (YE9V76353E)"
    "$original_directory/fruitstrap" -i $udid -b build/Release-iphoneos/Demo.app
  else
    clean_all
    if [[ -z $build_directory_b ]]; then
      android update project --target "android-17" --path .
    else
      android update project --target "android-17" --path . --library $build_directory_c
    fi
    ant debug
    adb install -r bin/*.apk
  fi
  cd $original_directory
fi

rm -r www/runs/*

ruby lib/fly_cucumber.rb $platform $udid $for_app $feature

for run in www/runs/$udid/*
do
  for sub_directory in $run/*
  do
    if [ -d "$sub_directory" ]; then
      cd "$sub_directory"
      for screenshot in *.png
      do
        if [ -f $screenshot ]; then
          mv $screenshot ../
        fi
      done
      cd $original_directory
    fi
  done
  for pngs in $run/*.png
  do
    if [ -f $pngs ]; then
      echo "<screen name='${pngs##*/}'></screen>" >> "$run/meta.xml"
    fi
  done
  echo "</test>" >> "$run/meta.xml"
done

[ ! -f effects_temp ] || rm effects_temp

cd www
./index.rb -u $udid

open "$udid.html"
